# import Math from "math";
module PointStuff has
  type Point<T> has
    x : T,
    y : T
  end

  type MaybePoint<T> is Point(T) | Nil end

  fn abs<T> $(point : Point(T)) : F32 =>
    Math::Module::Another::sqrt(point.x * point.x + point.y * point.y)
  end

  proc inc<T> (point : Point(T)) do
    point.x += 1;
    point.y += 1;
  end
end

# main inherently has namespace of single module optionally included in file
main do
  let point = Point(x = 10, y = 23);
  print(abs$(point));
end